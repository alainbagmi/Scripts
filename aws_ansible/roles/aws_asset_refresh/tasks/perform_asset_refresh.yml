---
### This runs Asset Refresh Tasks
- name: Start of Task Asset Refresh
  debug:
    msg: "Role: aws_asset_refresh; Task: perform_asset_refresh.yml"

- name: Show info from Extra Vars
  debug:
    msg: >
      "Site - {{ tenant }}, 
      Source Env - {{ source_env }}, 
      Target_Site - {{ target_tenant }}, 
      Target Env - {{ target_env }}"

- name: Set Source Facts
  set_fact:
    netstorage_source_path: "{{ akamai_path }}/refresh_files/{{ tenant }}/assets/*"
    netstorage_source_tar_path: "/data/adhoc_tasks/{{ tenant }}_files/asset_files/netstorage_temp"

#Netstorage Source to Target Environments
- name: Make a Temp directory for Netstorage file
  file:
    path: "{{ netstorage_source_tar_path }}/"
    state: directory
    owner: apache
    group: apache
    mode: 0777
    recurse: yes
  when: source_env == "netstorage"

- name: Sync Tar File from Netstorage
  shell: "rsync -avz -e 'ssh -i /home/ansible_tower/.ssh/bamboo_idrsa -o HostKeyAlgorithms=+ssh-dss' sshacs@dhswcms.upload.akamai.com:{{ netstorage_source_path }} {{ netstorage_source_tar_path }}/"
  when: source_env == "netstorage"

- name: Get Tar File Name
  shell: "ls {{ netstorage_source_tar_path }}/"
  register: tar_file_name
  when: source_env == "netstorage"

- name: Show Tar File Name
  debug:
    msg: "Tar File Name: {{ tar_file_name.stdout }}"
  when: source_env == "netstorage"

- name: Set Tar File Name as Fact
  set_fact:
    source_tar_file: "{{ tar_file_name.stdout }}"
  when: source_env == "netstorage"

- name: Set Tar file owner/group
  file:
    path: "{{ netstorage_source_tar_path }}/{{ source_tar_file }}"
    owner: apache
    group: apache
    mode: 0777
  when: source_env == "netstorage"

- name: Extract tar file
  unarchive:
    src: "{{ netstorage_source_tar_path }}/{{ source_tar_file }}"
    dest: "{{ aws_docking_assets }}/"
    owner: apache
    group: apache
  become: yes
  when: source_env == "netstorage"

- name: Ensure Mode and Permissions are set
  file:
    path: "{{ aws_docking_assets }}/"
    owner: apache
    group: apache
    mode: 0776
    recurse: yes
  when: source_env == "netstorage"

- name: Remove The Tar file
  file:
    path: "{{ netstorage_source_tar_path }}"
    state: absent
  become: yes
  when: source_env == "netstorage"

# Synchronize Source to Target
- name: Synchronize Source to Target (Netstorage to Target/AWS to AWS) 
  shell: "rclone copy --checkers=8 --multi-thread-streams=8 {{ aws_source_path }} {{ target_path }} {{ sync_exclude }}"
  when: target_index == "lower_env"
  become: yes
  become_user: apache

# Source to Netstorage Target
- name: Archive File
  shell: "cd {{ aws_source_path }} && tar --exclude='js/*' --exclude='cache/*' --exclude='tmp/*' --exclude='static-backup/*' --exclude='php/twig/*' --exclude='css/*' --exclude='err/*' --exclude='ilink/*' -zcf {{ netstorage_asset_tar_path }}/{{ netstorage_tar_file }} ."
  when: target_env == "netstorage"

- name: Ensure Mode and Permissions are set
  file:
    path: "{{ netstorage_asset_tar_path }}/{{ netstorage_tar_file }}"
    owner: apache
    group: apache
    mode: 0776
  when: target_env == "netstorage"

# - name: Archive File
#   archive:
#     path: "/mnt/staging/sites-files/staging.cbpbiod8_gov_build/files"
#     dest: "{{ netstorage_asset_tar_path }}/{{ netstorage_tar_file }}"
#     exclude_path: "/mnt/staging/sites-files/staging.cbpbiod8_gov_build/files/js"
#     format: gz
#     mode: 0776
#     owner: apache
#     group: apache
#   when: target_env == "netstorage"

- name: Sync Tar File to Netstorage
  shell: "rsync -avz -e 'ssh -i /home/ansible_tower/.ssh/bamboo_idrsa -o HostKeyAlgorithms=+ssh-dss' {{ netstorage_asset_tar_path }}/{{ netstorage_tar_file }} sshacs@dhswcms.upload.akamai.com:{{ akamai_asset_path }}/{{ netstorage_tar_file }}"
  when: target_env == "netstorage"

- name: Set asset refresh status
  set_fact:
    asset_refresh_status: "OK"
