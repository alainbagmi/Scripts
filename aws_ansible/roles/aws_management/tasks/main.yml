---
- name: Create Patching file directory
  file:
    path: /tmp/patching
    state: directory

- name: List all Packages Pre-Patching
  yum:
    list: updates 
    update_cache: true
  become: true
  become_method: sudo
  register: results

- name: Copy Results To A File 
  copy: 
    content: "{{ results | to_nice_json(indent=2) }}" 
    dest: /tmp/patching/prepatching_packages_management.json

- name: List all packages available for ansible, php and apache
  yum:
    list: "{{ item }}"
  with_items:
    - ansible
    - php
    - apache
  register: PKGS
  become: true
  become_method: sudo

- name: Copy Results To A File
  copy:
    content: "{{ PKGS | to_nice_json(indent=2) }}"
    dest: /tmp/patching/ansible_php_apache_packages_management.json

- name: Apply patching to  EC2 Instance
  yum: 
    name: "*"
    state: latest
    exclude:
      - ansible*
      - php* 
      - apache*
  become: true
  become_method: sudo

- name: List updated packages Post patching 
  shell: rpm -qa --last | grep "$(date +%a\ %d\ %b\ %Y)" | cut -f 1 -d " " 
  register: result 
  args: 
    warn: no

- name: Copy Results To A File
  copy:
    content: "{{ result.stdout_lines | to_nice_json }}"
    dest: /tmp/patching/postpatching_packages_management.json

- name: Write the chrony config
  template:
    src: '../files/chrony.conf'
    dest: '/etc/chrony.conf'
    force: yes
    owner: root
    group: root
    force: yes
    owner: root
    group: root
    mode: '0644'
  become: yes

- name: Run the chronyd restart
  command: service chronyd restart
  become: yes

- name: Show the output
  command: chronyc sources -v
  register: chrony_out
  become: yes

- name: Run the authconfig commands
  command: authconfig --enablefaillock --faillockargs='audit deny=3 unlock_time=1200' --update
  register: auth_config
  become: yes

- name: Update the Sudoers file
  become: true
  become_method: sudo
  blockinfile:
    path: /etc/sudoers
    block: |
      Defaults    env_keep += "solr_server"
      Defaults    env_keep += "db_port"
      Defaults    env_keep += "proxy_server"
      Defaults    env_keep += "db_server"
      Defaults    env_keep += "memcache_server1"
      Defaults    env_keep += "db_reader" 


- name: Mail all packages Postpatching
  mail:
    from: "hosts"
    to:
    # - antonio.punzo@associates.hq.dhs.gov
    # - kyle.day@associates.hq.dhs.gov
    # - mohammad.minaie@associates.hq.dhs.gov
    - morris.smith@associates.hq.dhs.gov
    # - sergei.ternovski@associates.hq.dhs.gov
    # - phucdat.nguyen@associates.hq.dhs.gov
    # - alain.bagmi@associates.hq.dhs.gov
    subject: "OS Pre And Post Patches For Management Servers"
    body: Pre And Post Patch Attachments For Management Servers
    attach: 
    - /tmp/patching/prepatching_packages_management.json
    - /tmp/patching/ansible_php_apache_packages_management.json
    - /tmp/patching/postpatching_packages_management.json

- name: Delete Patching file directory
  file:
    path: /tmp/patching
    state: absent

- name: Stop Splunk
  become: yes
  become_method: sudo
  shell: /opt/splunkforwarder/bin/splunk stop


- name: Clear Instance Specific Information
  become: yes
  become_method: sudo
  shell: /opt/splunkforwarder/bin/splunk clone-prep-clear-config

